# This is an OpenAPI Specification (https://swagger.io/specification/)
# for gp-connect-user-permissions owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  version: Computed and injected at build time by `scripts/set_version.py`
  title: GP Connect - User Permissions
  contact:
    name: GP Connect - User Permissions API Support
    url: https://digital.nhs.uk/developer/help-and-support
    email: api.management@nhs.net
  description: |
    ## Overview

    Use this API to manage a patient's permissions to access the medical
    record and services they can access at their GP practice.

    You can:

    - get a patient's permissions
    - request to update a patient's permissions to a higher level

    You cannot:

    - request to update a patient's permissions to a lower level

    To use this API, the end user must be a patient who is:

    - registered with the GP practice
    - registered with NHS login to P9 identity verification level

    This API allows you to manage the permissions for:

    - appointments
    - prescriptions
    - medical record

    ### Access modes

    This API has a single access mode:

    | Access mode                                                                                                                | Functions | Availability |
    | -----------                                                                                                                | --------- | ------------ |
    | [Patient access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#patient-access-mode) | Get own permissions. Update own permissions. | TBC |

    For further details about the access modes for this API, see
    [Security and authorisation](#api-description__security-and-authorisation) below.

    ## Who can use this API

    This API:

    - is only for use by patient-facing applications
    - is only for non-clinical use
    - can only be used where there is a legal basis to do so

    Make sure you have a valid use case before you go too far with your development. To do this, contact us.

    You must do this before you can go live (see `Onboarding` below).

    ## Related APIs

    The GP Connect suite of patient facing service (PFS) APIs include the
    following related APIs:

    - [GP Connect appointment management FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-appointment-management-fhir) - manage GP practice appointments between different systems.
    - GP Connect access record API - retrieve a patient's medical record from the GP practice systems.
    - GP Connect prescriptions management API - manage a patient's prescriptions as held by the GP practice systems.

    ## API status and roadmap

    This API is [in development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:

    - it is available for testing in the integration environment
    - it is not available for production use
    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice

    ## Service level

    This API is a silver service, meaning it is operational 24 x 7 x 365 but
    only supported during business hours (8am to 6pm), Monday to Friday
    excluding bank holidays.

    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology

    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/our-api-technologies#basic-rest)

    ## Network access

    This API is available on the internet.

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation

    This API is
    [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis),
    meaning an end user must be present and authenticated to use it.

    The end user must be:

    - a patient
    - authenticated with NHS login to P9 identity verification level

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to
    authorise the calling system. It supports the following security pattern
    using NHS login:

    - [User-restricted RESTful APIs - NHS login separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-separate-authentication-and-authorisation)

    ## Environments and testing

    | Purpose          | URL                                                   |
    | -------          | ---                                                   |
    | Sandbox          | `https://sandbox.api.service.nhs.uk/user-permissions` |
    | Integration test | Not yet available                                     |
    | Production       | Not yet available                                     |

    ### Sandbox testing

    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    - is for early developer testing
    - only covers a limited set of scenarios
    - is stateless, so it does not store data
    - is open access, so does not allow you to test authorisation

    For more details on sandbox testing, or to try out the sandbox using our
    "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing (not yet available)

    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    - is for formal integration testing
    - is stateful, so it does persist data
    - includes authorisation

    For more details see
     [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ## Onboarding

    We are hoping to make the assurance process as lightweight and as
    self-service as possible.

    ## Errors

    We use standard HTTP status codes to show whether an API request succeeded
    or not. They are usually in the range:

    - 200 to 299 if it succeeded, including code 202 if it was accepted by an
      API that needs to wait for further action

    - 400 to 499 if it failed because of a client error by your application

    - 500 to 599 if it failed because of an error on our server

    Errors specific to each API are shown in the Endpoints section, under
    Response. See our
    [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes)
    for more on errors.

servers:
  - url: https://sandbox.api.service.nhs.uk/user-permissions
    description: Sandbox environment

tags:
  - name: User Permissions
    description: User permissions operations

paths:
  /gp-connect/user-permissions/{id}:
    parameters:
      - $ref: "#/components/parameters/Id"
    get:
      operationId: getUserPermissions
      tags:
        - User Permissions
      summary: GET a patient's permissions.
      description: |
        Get a patient's permissions to access the medical record and services
        they can access at their GP practice.
        Returns a `UserPermission` object which includes a list of services and
        the `current` and `historical` level of permission, along with a
        date for when the current level started.
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPermission"
              examples:
                "Full permissions to medical record and services":
                  $ref: "#/components/examples/FullPermissions"
                "Pending request to get documents access to historical record":
                  $ref: "#/components/examples/PendingRequestForDocumentsAccess"
                "Pending request for full access to appointments":
                  $ref: "#/components/examples/PendingRequestForFullAccessAppointments"
                "Multiple pending requests":
                  $ref: "#/components/examples/MultiplePendingRequests"
    post:
      operationId: updateUserPermissions
      tags:
        - User Permissions
      summary: Request a change to a permission.
      description: |
        Request a change to the permission a patient has for their medical
        record or services provided by the GP practice.
        Once a request has been submitted it will be actioned, however, due to
        the nature of the request when this will happen is unknown at the time
        of request submission.
        When the request has been actioned the result will be apparent in the
        response to getting the permissions.
        The message returned from submitting the request _should_ contain
        information pertinent to when the request may be actioned. This could
        be shown to the user to help set expectations.
      requestBody:
        $ref: "#/components/requestBodies/UpdatePermission"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionUpdateResponse"
              examples:
                ? "Request for documents access for historical permissions that is pending"
                : value:
                    type: medical
                    id: historical
                    accessLevel: documents
                    status: pending
                    message: |
                      Request accepted to update access historical effective
                      date to documents.
                    dateCreated: "2022-11-01T00:00:00+00:00"
                "Request to move effectiveDate back to requested date":
                  value:
                    type: medical
                    id: current
                    accessLevel: full
                    date: "2021-11-01T00:00:00+00:00"
                    status: pending
                    message: Request received to move effective date to date.
                    dateCreated: "2022-11-01T00:00:00+00:00"
                "Request for full access to prescriptions service":
                  value:
                    type: service
                    id: prescriptions
                    accessLevel: full
                    status: pending
                    message: |
                      Request received for full access to prescriptions service.
                    dateCreated: "2022-11-01T00:00:00+00:00"
                "Request rejected for full access to appointments service":
                  value:
                    type: service
                    id: prescriptions
                    accessLevel: full
                    status: rejected
                    message: |
                      Request received for full access to prescriptions
                      service.
                    dateCreated: "2022-11-01T00:00:00+00:00"

components:
  parameters:
    Id:
      in: path
      name: id
      description: |
        The patient's NHS number. The primary identifier of a patient, unique
        within NHS England and Wales. Always 10 digits and must be a
        [valid NHS number](https://www.datadictionary.nhs.uk/attributes/nhs_number.html).
      required: true
      schema:
        type: string
        example: "9000000009"

  schemas:
    UserPermission:
      type: object
      required:
        - medicalRecord
        - services
        - requests
      properties:
        medicalRecord:
          $ref: "#/components/schemas/MedicalRecordPermission"
        services:
          type: array
          description: |
            List of services available to the patient including whether the
            service is accessible or not.
          items:
            $ref: "#/components/schemas/ServicePermission"
        requests:
          type: array
          description: |
            List of outstanding requests that have been made to update either
            the medical record or services permissions.
          items:
            anyOf:
              - $ref: "#/components/schemas/MedicalRecordRequest"
              - $ref: "#/components/schemas/ServiceRequest"

    MedicalRecordPermission:
      type: object
      description: |
        Contains the access level the patient has to the medical record. This
        is split into `current.accessLevel` and `historical.accessLevel` with
        an `effectiveDate` for when the current access level started.
        Also includes the `maxAccessLevel` - the highest level of permission
        that can be requested by the patient.
        An optional `request` object can be used to describe pending requests.
      required:
        - current
        - effectiveDate
      properties:
        effectiveDate:
          type: string
          description: The date when the `current` permissions started.
          format: date/time
          example: "2022-11-01T00:00:00+00:00"
        current:
          $ref: "#/components/schemas/MedicalRecordPermissionItem"
        historical:
          $ref: "#/components/schemas/MedicalRecordPermissionItem"

    MedicalRecordPermissionItem:
      type: object
      description: |
        An object representing the level of permission a patient has to the
        section of the medical record along with the maximum level of access
        they could request.
      required:
        - accessLevel
        - maxAccessLevel
      properties:
        accessLevel:
          $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
        maxAccessLevel:
          $ref: "#/components/schemas/MaxMedicalRecordAccessLevelEnum"

    ServicePermission:
      type: object
      description: A service and the level of access a patient has to it.
      required:
        - id
        - accessLevel
        - maxAccessLevel
      properties:
        id:
          $ref: "#/components/schemas/ServiceIdEnum"
        accessLevel:
          $ref: "#/components/schemas/ServiceAccessLevelEnum"
        maxAccessLevel:
          $ref: "#/components/schemas/MaxServiceAccessLevelEnum"

    BaseRequest:
      type: object
      description: |
        An object containing information pertaining to any pending or rejected
        requests.
      required:
        - status
        - dateCreated
        - message
      properties:
        dateCreated:
          type: string
          description: |
            The date/time when the request for change was created.
          format: date-time
          example: "2022-11-01T00:00:00+00:00"
        message:
          type: string
          description: A message pertaining to the request and its status.
          example: Request requires review by a healthcare worker.
        status:
          type: string
          description: The status of the request to update the permission.
          enum:
            - pending
            - rejected
    MedicalRecordRequest:
      type: object
      description: |
        An object containing information pertaining to any pending or rejected
        requests for changes to medical record permissions.
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - type: object
          required:
            - accessLevel
            - id
            - type
          properties:
            accessLevel:
              $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
            id:
              $ref: "#/components/schemas/MedicalRecordPermissionTypeIdEnum"
            type:
              type: string
              description: The type of request.
              enum:
                - medical
    ServiceRequest:
      type: object
      description: |
        An object containing information pertaining to any pending or rejected
        requests for changes to service permissions.
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - type: object
          required:
            - accessLevel
            - id
            - type
          properties:
            accessLevel:
              $ref: "#/components/schemas/ServiceAccessLevelEnum"
            id:
              $ref: "#/components/schemas/ServiceIdEnum"
            type:
              type: string
              description: The type of request.
              enum:
                - service

    MedicalRecordPermissionUpdate:
      type: object
      description: |
        Object containing the `type` and `id` of the permission to update along
        with the `accessLevel` to update to.
      required:
        - type
        - id
        - accessLevel
      properties:
        type:
          type: string
          enum:
            - medical
        id:
          $ref: "#/components/schemas/MedicalRecordPermissionTypeIdEnum"
        accessLevel:
          $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
        effectiveDate:
          type: string
          description: |
            The date to move the current effective permission date to. Only
            applicable when access level is `full` and id is `current`.
          format: date-time
          example: "2022-11-01T00:00:00+00:00"
    ServicePermissionUpdate:
      type: object
      description: |
        Object containing the `type` and `id` of the permission to update along
        with the `accessLevel` to update to.
      required:
        - type
        - id
        - accessLevel
      properties:
        type:
          type: string
          enum:
            - service
        id:
          $ref: "#/components/schemas/ServiceIdEnum"
        accessLevel:
          $ref: "#/components/schemas/ServiceAccessLevelEnum"

    PermissionUpdateResponse:
      type: object
      oneOf:
        - $ref: "#/components/schemas/MedicalRecordPermissionUpdateResponse"
        - $ref: "#/components/schemas/ServicePermissionUpdateResponse"
      discriminator:
        propertyName: type
        mapping:
          medical: "#/components/schemas/MedicalRecordPermissionUpdateResponse"
          service: "#/components/schemas/ServicePermissionUpdateResponse"
    BasePermissionUpdateResponse:
      type: object
      allOf:
        - type: object
          required:
            - status
            - message
          properties:
            status:
              type: string
              description: The status of the update request.
              enum:
                - rejected
                - pending
              example: pending
            message:
              type: string
              description: |
                Message pertaining to the result of the request.
              example: |
                Request to allow access to documents is pending.
            dateCreated:
              type: string
              description: |
                Indicates that date time when the request was created.
              format: date-time
              example: "2022-11-01T00:00:00+00:00"
    MedicalRecordPermissionUpdateResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BasePermissionUpdateResponse"
        - $ref: "#/components/schemas/MedicalRecordPermissionUpdate"
    ServicePermissionUpdateResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BasePermissionUpdateResponse"
        - $ref: "#/components/schemas/ServicePermissionUpdate"

    # Enums
    MedicalRecordAccessLevelEnum:
      type: string
      description: The access level the patient has to the medical record.
      enum:
        - none
        - summary
        - detailed
        - documents
        - full
      example: detailed
    MaxMedicalRecordAccessLevelEnum:
      type: string
      description: |
        The maximum access level the patient can have to the medical record.
      enum:
        - none
        - summary
        - detailed
        - documents
        - full
      example: documents
    MedicalRecordPermissionTypeIdEnum:
      type: string
      description: The type of the permission.
      enum:
        - current
        - historical
      example: current
    ServiceAccessLevelEnum:
      type: string
      description: |
        Indicates the level of access the patient has to the service.

        | level  | description                                                                       |
        | -----  | -----------                                                                       |
        | none   | no access                                                                         |
        | view   | view only                                                                         |
        | action | can perform main action for service e.g. book appointments or order prescriptions |
        | full   | can amend/cancel existing appointments or prescriptions                           |
      enum:
        - none
        - view
        - action
        - full
      example: view
    MaxServiceAccessLevelEnum:
      type: string
      description: |
        Indicates the maximum level of access the patient can have to the
        service.

        | level  | description                                                                       |
        | -----  | -----------                                                                       |
        | none   | no access                                                                         |
        | view   | view only                                                                         |
        | action | can perform main action for service e.g. book appointments or order prescriptions |
        | full   | can amend/cancel existing appointments or prescriptions                           |
      enum:
        - none
        - view
        - action
        - full
      example: action
    ServiceIdEnum:
      type: string
      description: The id of the service.
      enum:
        - appointments
        - prescriptions
      example: appointments

  examples:
    FullPermissions:
      value:
        medicalRecord:
          effectiveDate: "2022-11-01T00:00:00+00:00"
          current:
            accessLevel: full
            maxAccessLevel: full
          historical:
            accessLevel: summary
            maxAccessLevel: documents
        services:
          - id: appointments
            accessLevel: view
            maxAccessLevel: full
          - id: prescriptions
            accessLevel: action
            maxAccessLevel: full
    PendingRequestForDocumentsAccess:
      value:
        medicalRecord:
          effectiveDate: "2022-11-01T00:00:00+00:00"
          current:
            accessLevel: full
            maxAccessLevel: full
          historical:
            accessLevel: summary
            maxAccessLevel: documents
        services:
          - id: appointments
            accessLevel: action
            maxAccessLevel: action
          - id: prescriptions
            accessLevel: view
            maxAccessLevel: action
        requests:
          - status: pending
            dateCreated: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: documents
            id: historical
            type: medical
    PendingRequestForFullAccessAppointments:
      value:
        medicalRecord:
          effectiveDate: "2022-11-01T00:00:00+00:00"
          current:
            accessLevel: full
            maxAccessLevel: full
          historical:
            accessLevel: summary
            maxAccessLevel: detailed
        services:
          - id: appointments
            accessLevel: view
            maxAccessLevel: action
          - id: prescriptions
            accessLevel: view
            maxAccessLevel: action
        requests:
          - status: pending
            dateCreated: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: action
            id: appointments
            type: service
    MultiplePendingRequests:
      value:
        medicalRecord:
          effectiveDate: "2022-11-01T00:00:00+00:00"
          current:
            accessLevel: full
            maxAccessLevel: full
          historical:
            accessLevel: summary
            maxAccessLevel: detailed
        services:
          - id: appointments
            accessLevel: view
            maxAccessLevel: action
          - id: prescriptions
            accessLevel: view
            maxAccessLevel: action
        requests:
          - status: pending
            dateCreated: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: action
            id: appointments
            type: service
          - status: pending
            dateCreated: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: detailed
            id: historical
            type: medical

  requestBodies:
    UpdatePermission:
      description: |
        Object containing the `type` and `id` of the permission to update along
        with the `currentAccessLevel` to update to.
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/MedicalRecordPermissionUpdate"
              - $ref: "#/components/schemas/ServicePermissionUpdate"
            discriminator:
              propertyName: type
              mapping:
                medical: "#/components/schemas/MedicalRecordPermissionUpdate"
                service: "#/components/schemas/ServicePermissionUpdate"
          examples:
            ? "Request documents access for medical record historical effective date"
            : value:
                type: medical
                id: historical
                accessLevel: documents
            "Request effective date is moved back to date":
              value:
                type: medical
                id: current
                accessLevel: full
                effectiveDate: "2022-11-01T00:00:00+00:00"
            "Request action access to appointments service":
              value:
                type: service
                id: appointments
                accessLevel: action

  securitySchemes:
    BearerAuthorization:
      type: http
      description: |
        An
        [OAuth 2.0 bearer token](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis)
        from NHS login.
      scheme: bearer
      bearerFormat: ^Bearer\ [[:ascii:]]+$

security:
  - BearerAuthorization: []
