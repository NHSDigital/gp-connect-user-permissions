# This is an OpenAPI Specification (https://swagger.io/specification/)
# for gp-connect-user-permissions owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  version: Computed and injected at build time by `scripts/set_version.py`
  title: GP Connect - Patient Permissions
  contact:
    name: GP Connect - Patient Permissions API Support
    url: https://digital.nhs.uk/developer/help-and-support
    email: api.management@nhs.net
  description: |
    ## Overview

    Use this API to list and manage the permissions a patient has to their
    medical record and a selection of services provided at their GP practice.

    You can:

    - get a patient's permissions
    - request to update a patient's permissions to a higher level

    You cannot:

    - request to update a patient's permissions to a lower level

    To use this API, the end user must be a patient who is:

    - registered with the GP practice
    - registered with NHS login to P9 identity verification level

    This API allows you to manage the permissions for:

    - appointments
    - prescriptions
    - medical record

    ### Access modes

    This API has a single access mode:

    | Access mode                                                                                                                | Functions                                    | Availability |
    | -----------                                                                                                                | ---------                                    | ------------ |
    | [Patient access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#patient-access-mode) | Get own permissions. Update own permissions. | TBC          |

    For further details about the access modes for this API, see
    [Security and authorisation](#api-description__security-and-authorisation) below.

    ## Who can use this API

    This API:

    - is only for use by patient-facing applications
    - is only for non-clinical use
    - can only be used where there is a legal basis to do so

    Make sure you have a valid use case before you go too far with your
    development. To do this, [contact us](https://digital.nhs.uk/developer/help-and-support).

    You must do this before you can go live (see
    [Onboarding](#api-description__onboarding) below).

    ## Related APIs

    The GP Connect suite of APIs include the following related APIs:

    - [GP Connect (1st Generation) Access Document - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-access-document-fhir) - retrieve unstructured documents from a patient's GP practice record.
    - [GP Connect (1st Generation) Access Record: HTML - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-access-record-html-fhir) - view a patient's GP practice record, with read-only access.
    - [GP Connect (1st Generation) Access Record: Structured - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-access-record-structured-fhir) - retrieve structured information from a patient's GP practice record.
    - [GP Connect (1st Generation) Appointment Management - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-appointment-management-fhir) - manage GP practice appointments between different systems.
    - [GP Connect (1st Generation) Send Document - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-send-document-fhir) - send a PDF consultation summary to a registered GP practice.
    - [GP Connect (patient facing) Access Record - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-2nd-generation-access-record-fhir) - access a patient's GP records with the GP Connect (patient facing) Access Record - FHIR API.
    - [GP Connect (patient facing) Appointment Management - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-2nd-generation-appointment-management-fhir) - manage a patient's GP appointments using the GP Connect (patient facing) Appointment Management - FHIR API.
    - [GP Connect (patient facing) Prescriptions - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-2nd-generation-prescriptions-fhir) - manage a patient's prescriptions using the GP Connect (patient facing) Prescriptions - FHIR API.

    ## API status and roadmap

    This API is [in development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:

    - it is available for testing in the integration environment
    - it is not available for production use
    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice

    To see our roadmap or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/suggestions/341390/gp-connect-user-permissions).

    If you have any other queries,
    [contact us](https://digital.nhs.uk/developer/help-and-support).

    ## Service level

    This API is a silver service, meaning it is operational 24 x 7 x 365 but
    only supported during business hours (8am to 6pm), Monday to Friday
    excluding bank holidays.

    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology

    This API is
    [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/our-api-technologies#basic-rest).

    ## Network access

    This API is available on the internet and, indirectly, on the
    [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation

    This API is
    [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis),
    meaning an end user must be present and authenticated to use it.

    The end user must be:

    - a patient
    - authenticated with NHS login to P9 identity verification level

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to
    authorise the calling system. It supports the following security pattern
    using NHS login:

    - [User-restricted RESTful APIs - NHS login separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-separate-authentication-and-authorisation)

    ## Environments and testing

    | Purpose          | URL                                                                        |
    | -------          | ---                                                                        |
    | Sandbox          | `https://sandbox.api.service.nhs.uk/gp-connect/patient-facing/permissions` |
    | Integration test | Not yet available                                                          |
    | Production       | Not yet available                                                          |

    ### Sandbox testing

    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    - is for early developer testing
    - only covers a limited set of scenarios
    - is stateless, so it does not store data
    - is open access, so does not allow you to test authorisation

    For more details on sandbox testing, or to try out the sandbox using our
    "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing (not yet available)

    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    - is for formal integration testing
    - is stateful, so it does persist data
    - includes authorisation

    For more details see
     [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ## Onboarding

    We are hoping to make the assurance process as lightweight and as
    self-service as possible.

    ## Errors

    We use standard HTTP status codes to show whether an API request succeeded
    or not. They are usually in the range:

    - 200 to 299 if it succeeded, including code 202 if it was accepted by an
      API that needs to wait for further action

    - 400 to 499 if it failed because of a client error by your application

    - 500 to 599 if it failed because of an error on our server

    Errors specific to each API are shown in the Endpoints section, under
    Response. See our
    [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes)
    for more on errors.

servers:
  - url: https://sandbox.api.service.nhs.uk/gp-connect/patient-facing/permissions
    description: Sandbox environment

paths:
  /Patient/{id}:
    parameters:
      - $ref: "#/components/parameters/Id"
      - $ref: "#/components/parameters/BearerAuthorization"
      - $ref: "#/components/parameters/CorrelationID"
      - $ref: "#/components/parameters/RequestID"
    get:
      operationId: getPatientPermissions
      summary: Get a patient's permissions
      description: |
        ## Overview

        Get a patient's permissions. The permissions describe the level of
        access the patient has to their medical record, the appointments
        service and the prescriptions service provided at their GP practice.

        The medical record permission includes the access level the patient
        has to both their current and their historical medical record.
        The appointments and prescriptions service permissions are the access
        level the patient has to them now.

        Use cases covered by this endpoint include:

        * building a UI so only the elements the patient has access to are
          available
        * presenting permissions to the patient so they can see what they do
          and do not have access to
        * presenting permissions to the patient so they can request additional
          permissions

        Each permission has two properties, an `accessLevel` and an
        `accessLevelMax`.

        `accessLevel` describes the current level of permission
        the patient has.

        `accessLevelMax` describes the maximum level of permission the patient
        may request. For example, if a patient has an `accessLevel` of
        `summary` and an `accessLevelMax` of `detailed` for their current
        medical record they can make a request to increase their level of
        access to `detailed` but not `documents` or `full`.

        The `requests` property contains information about any `pending`
        requests. This information can be used to inform patients about the
        state of their requests. Any requests that have been
        previously processed will not be listed.
      responses:
        200:
          description: Successful response
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/X-Correlation-ID"
            X-Request-ID:
              $ref: "#/components/headers/X-Request-ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientPermission"
              examples:
                GetResponsePermissionsFull:
                  $ref: "#/components/examples/GetResponsePermissionsFull"
                GetResponsePendingRequestDetailed:
                  $ref: "#/components/examples/GetResponsePendingRequestDetailed"
                GetResponsePendingRequestAppointmentsFull:
                  $ref: "#/components/examples/GetResponsePendingRequestAppointmentsFull"
                GetResponseMultiplePendingRequests:
                  $ref: "#/components/examples/GetResponseMultiplePendingRequests"
        4XX:
          description: |
            An error occurred as follows:

            | HTTP status | Error code             | Description                                                                                                                               |
            | ----------- | ----------             | -----------                                                                                                                               |
            | 400         | INVALID_RESOURCE_ID    | Invalid NHS number.                                                                                                                       |
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InvalidRequestError:
                  $ref: "#/components/examples/InvalidRequestError"
                MinimalErrorResponse:
                  $ref: "#/components/examples/MinimalErrorResponse"
    post:
      operationId: updatePatientPermissions
      summary: Request a change to a permission
      description: |
        ## Overview

        Request a change to the permission a patient has for their medical
        record or services provided by the GP practice.

        Use cases covered by this endpoint include the patient requesting:

        * additional access to the appointments
        * additional access to the prescriptions
        * additional access to their current medical record
        * detailed coded record access to their historical medical record

        For every request made, the response will include `createdDateTime`
        (when it was created), a `message` (about the request), the
        `status` of the request (status is either `pending` or `rejected`) and
        information specific to the request.

        The `message` is information that should be displayed to the patient to
        help them understand that the request has been received and will be
        processed at some point in the future.

        When a response has a status of `pending` it has been added to the GP
        system's workflow. The request will be processed at some point in the
        future.

        Any requests that are `pending` will be available when calling
        [Get a patient's permissions](#api-PatientPermissions-getPatientPermissions).

        When a `pending` request is completed it will no longer be listed in
        `requests`. Should a change be made to the permission, it will be
        available when calling
        [Get a patient's permissions](#api-PatientPermissions-getPatientPermissions).

        Any requests that are `rejected` have not been added to the GP system's
        workflow. The message returned in a `rejected` response will explain
        the reason for the rejection. This should be displayed to the patient.

        If a request is a duplicate, it will be deduplicated by
        the GP system, with the original request being preserved.

        If multiple requests are made they will be combined and reviewed
        together by a healthcare worker.
      requestBody:
        $ref: "#/components/requestBodies/UpdatePermission"
      responses:
        200:
          description: Successful response
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/X-Correlation-ID"
            X-Request-ID:
              $ref: "#/components/headers/X-Request-ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionUpdateResponse"
              examples:
                PostResponsePendingHistoricalDetailed:
                  $ref: "#/components/examples/PostResponsePendingHistoricalDetailed"
                ResponseRequestRejectedAppointments:
                  $ref: "#/components/examples/ResponseRequestRejectedAppointments"
        4XX:
          description: |
            An error occurred as follows:

            | HTTP status | Error code                      | Description                                                                                                                                                              |
            | ----------- | ----------                      | -----------                                                                                                                                                              |
            | 400         | INVALID_RESOURCE_ID             | Invalid NHS number.                                                                                                                                                      |
            | 400         | INVALID_UPDATE                  | Malformed request.                                                                                                                                                       |
            | 400         | VALIDATION_ERROR                | This is the "default" error thrown when no others are applicable.                                                                                                        |
            | 400         | UNSUPPORTED_CHARACTERS_IN_FIELD | Invalid value in body of patch request. For details, see the `diagnostics` field.                                                                                        |
            | 400         | ADDITIONAL_PROPERTIES           | The user sent additional properties within the dictionary.                                                                                                               |
            | 400         | UNSUPPORTED_VALUE               | There was an unsupported value in the request. For example sending a request and attempting to set a permission for an unknown permission type such as `communications`. |
            | 403         | FORBIDDEN_UPDATE                | The user is not permitted to make certain requests. For example, no user can request access beyond the level of access denoted by `accessLevelMax`.                      |
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InvalidRequestError:
                  $ref: "#/components/examples/InvalidRequestError"
                MinimalErrorResponse:
                  $ref: "#/components/examples/MinimalErrorResponse"

components:
  headers:
    X-Correlation-ID:
      schema:
        $ref: "#/components/schemas/CorrelationID"
    X-Request-ID:
      schema:
        $ref: "#/components/schemas/RequestID"

  parameters:
    BearerAuthorization:
      $ref: "components/parameters/BearerAuthorization.yaml"
    CorrelationID:
      $ref: "components/parameters/CorrelationID.yaml"
    Id:
      $ref: "components/parameters/Id.yaml"
    RequestID:
      $ref: "components/parameters/RequestID.yaml"

  schemas:
    AppointmentsAccessLevelEnum:
      $ref: "components/schemas/AppointmentsAccessLevelEnum.yaml"
    AppointmentsAccessLevelMaxEnum:
      $ref: "components/schemas/AppointmentsAccessLevelMaxEnum.yaml"
    AppointmentsPermission:
      $ref: "components/schemas/AppointmentsPermission.yaml"
    AppointmentsPermissionTypeEnum:
      $ref: "components/schemas/AppointmentsPermissionTypeEnum.yaml"
    AppointmentsPermissionRequest:
      $ref: "components/schemas/AppointmentsPermissionRequest.yaml"
    AppointmentsPermissionUpdate:
      $ref: "components/schemas/AppointmentsPermissionUpdate.yaml"
    AppointmentsPermissionUpdateResponse:
      $ref: "components/schemas/AppointmentsPermissionUpdateResponse.yaml"
    BaseRequest:
      $ref: "components/schemas/BaseRequest.yaml"
    CorrelationID:
      $ref: "components/schemas/CorrelationID.yaml"
    ErrorResponse:
      $ref: "components/schemas/ErrorResponse.yaml"
    MedicalRecordAccessLevelEnum:
      $ref: "components/schemas/MedicalRecordAccessLevelEnum.yaml"
    MedicalRecordAccessLevelMaxEnum:
      $ref: "components/schemas/MedicalRecordAccessLevelMaxEnum.yaml"
    MedicalRecordCurrentPermissionItem:
      $ref: "components/schemas/MedicalRecordCurrentPermissionItem.yaml"
    MedicalRecordHistoricalPermissionItem:
      $ref: "components/schemas/MedicalRecordHistoricalPermissionItem.yaml"
    MedicalRecordPermission:
      $ref: "components/schemas/MedicalRecordPermission.yaml"
    MedicalRecordPermissionRequest:
      $ref: "components/schemas/MedicalRecordPermissionRequest.yaml"
    MedicalRecordPermissionTypeEnum:
      $ref: "components/schemas/MedicalRecordPermissionTypeEnum.yaml"
    MedicalRecordPermissionUpdate:
      $ref: "components/schemas/MedicalRecordPermissionUpdate.yaml"
    MedicalRecordPermissionUpdateResponse:
      $ref: "components/schemas/MedicalRecordPermissionUpdateResponse.yaml"
    MedicalRecordTypeEnum:
      $ref: "components/schemas/MedicalRecordTypeEnum.yaml"
    PatientPermission:
      $ref: "components/schemas/PatientPermission.yaml"
    PermissionUpdateResponse:
      $ref: "components/schemas/PermissionUpdateResponse.yaml"
    PrescriptionsAccessLevelEnum:
      $ref: "components/schemas/PrescriptionsAccessLevelEnum.yaml"
    PrescriptionsAccessLevelMaxEnum:
      $ref: "components/schemas/PrescriptionsAccessLevelMaxEnum.yaml"
    PrescriptionsPermission:
      $ref: "components/schemas/PrescriptionsPermission.yaml"
    PrescriptionsPermissionRequest:
      $ref: "components/schemas/PrescriptionsPermissionRequest.yaml"
    PrescriptionsPermissionUpdate:
      $ref: "components/schemas/PrescriptionsPermissionUpdate.yaml"
    PrescriptionsPermissionUpdateResponse:
      $ref: "components/schemas/PrescriptionsPermissionUpdateResponse.yaml"
    PrescriptionsPermissionTypeEnum:
      $ref: "components/schemas/PrescriptionsPermissionTypeEnum.yaml"
    RequestID:
      $ref: "components/schemas/RequestID.yaml"

  examples:
    InvalidRequestError:
      $ref: "components/examples/InvalidRequestError.yaml"
    MinimalErrorResponse:
      $ref: "components/examples/MinimalErrorResponse.yaml"
    GetResponsePermissionsFull:
      $ref: "components/examples/GetResponsePermissionsFull.yaml"
    GetResponseMultiplePendingRequests:
      $ref: "components/examples/GetResponseMultiplePendingRequests.yaml"
    GetResponsePendingRequestDetailed:
      $ref: "components/examples/GetResponsePendingRequestDetailed.yaml"
    GetResponsePendingRequestAppointmentsFull:
      $ref: "components/examples/GetResponsePendingRequestAppointmentsFull.yaml"
    PostResponsePendingHistoricalDetailed:
      $ref: "components/examples/PostResponsePendingHistoricalDetailed.yaml"
    ResponseRequestRejectedAppointments:
      $ref: "components/examples/PostResponseRejectedAppointments.yaml"
    PostRequestBodyAppointmentsBook:
      $ref: "components/examples/PostRequestBodyAppointmentsBook.yaml"
    PostRequestBodyHistoricalDetailed:
      $ref: "components/examples/PostRequestBodyHistoricalDetailed.yaml"
    PostRequestBodyPrescriptionsFull:
      $ref: "components/examples/PostRequestBodyPrescriptionsFull.yaml"

  requestBodies:
    UpdatePermission:
      $ref: "components/requestBodies/UpdatePermission.yaml"
