# This is an OpenAPI Specification (https://swagger.io/specification/)
# for gp-connect-user-permissions owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  version: Computed and injected at build time by `scripts/set_version.py`
  title: GP Connect - User Permissions
  contact:
    name: GP Connect - User Permissions API Support
    url: https://digital.nhs.uk/developer/help-and-support
    email: api.management@nhs.net
  description: |
    ## Overview

    Use this API to access an NHS patient's permissions for their medical
    record and GP services. These permissions are held in GP systems.

    You can:

    - get a patient's permissions
    - update a patient's permissions to a higher level

    You cannot:

    - update a patient's permissions to a lower level
    - get a patient's permissions using proxy access
    - update a patient's permissions using proxy access

    To use this API, patients must:

    - be a member of a GP practice
    - be registered with NHS Login

    ### Access modes

    This API has a single access mode:

    | Access mode                                                                                                                | Functions | Availability |
    | -----------                                                                                                                | --------- | ------------ |
    | [Patient access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#patient-access-mode) | Get own permissions. Update own permissions. | TBC |

    For further details about the access modes for this API, see
    [Security and authorisation](#api-description__security-and-authorisation) below.

    ## Who can use this API

    This API can only be used where there is a legal basis to do so. Make sure
    you have a valid use case before you go too far with your development. You
    must demonstrate you have a valid use case as part of digital onboarding.

    You must do this before you can go live (see `Onboarding` below).

    ### Who can access patient's permissions

    Use this API if you are a patient-facing application, like the NHS App and
    use NHS login to authenticate patients.

    ## Related APIs

    The GP Connect suite of patient facing service (PFS) APIs include the
    following related APIs:

    - [GP Connect appointment management FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-appointment-management-fhir)
    - GP Connect view record API
    - GP Connect prescriptions management API

    ## API Status and roadmap

    This API is in [development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:

    - it is available for testing in the integration environment
    - it is not available for production use
    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice

    ## Service level

    This API is a silver service, meaning it is operational 24 x 7 x 365 but
    only supported during business hours (8am to 6pm), Monday to Friday
    excluding bank holidays.

    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology

    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/our-api-technologies#basic-rest)

    ## Network access

    This API is available on the internet.

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation

    All communications must be encrypted using HTTP(S).

    This API is user-restricted, meaning an end user must be present and
    authenticated to use it.

    The end user must be:

    - a patient
    - authenticated with NHS login

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to
    authorise the calling system. It supports the following security patterns
    using NHS login:

    - [User-restricted RESTful APIs - NHS login separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-separate-authentication-and-authorisation)

    ## Environments and testing

    | Purpose          | URL                                                   |
    | -------          | ---                                                   |
    | Sandbox          | `https://sandbox.api.service.nhs.uk/user-permissions` |
    | Integration test | Not yet available                                     |
    | Production       | Not yet available                                     |

    ### Sandbox testing

    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    - is for early developer testing
    - only covers a limited set of scenarios
    - is stateless, so it does not store data
    - is open access, so does not allow you to test authorisation

    For more details on sandbox testing, or to try out the sandbox using our
    "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing (not yet available)

    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    - is for formal integration testing
    - is stateful, so it does persist data
    - includes authorisation

    For more details see
     [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ## Onboarding

    We are hoping to make the assurance process as lightweight and as
    self-service as possible.

servers:
  - url: https://sandbox.api.service.nhs.uk/user-permissions
    description: Sandbox environment

tags:
  - name: User Permissions
    description: User permissions operations

paths:
  /:
    get:
      tags:
        - User Permissions
      summary: GET a user's permissions.
      description: |
        Returns a `UserPermission` object which includes a list of services and
        a list of medical record permission sets with a date range for when
        they are or have been applicable.
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPermission"
              examples:
                "Full permissions to medical record and services":
                  $ref: "#/components/examples/FullPermissions"
                "Pending request to get documents access to before record":
                  $ref: "#/components/examples/PendingRequestForDocumentsAccess"
                "Pending request for full access to appointments":
                  $ref: "#/components/examples/PendingRequestForFullAccessAppointments"
                "Multiple pending requests":
                  $ref: "#/components/examples/MultiplePendingRequests"
        4XX:
          description: Invalid request
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "Invalid request error response":
                  $ref: "#/components/examples/InvalidRequestError"
                "Error response with only the required fields":
                  $ref: "#/components/examples/ErrorResponseWithOnlyTheRequiredFields"
        5XX:
          description: Server error
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "Server error response":
                  $ref: "#/components/examples/ServerError"
                "Error response with only the required fields":
                  $ref: "#/components/examples/ErrorResponseWithOnlyTheRequiredFields"

  /update-permission:
    post:
      tags:
        - User Permissions
      summary: Request a change to a permission.
      requestBody:
        $ref: "#/components/requestBodies/UpdatePermission"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionUpdateResponse"
              examples:
                ? "Request for documents access for before effective date is pending"
                : value:
                    type: medical
                    id: before
                    accessLevel: documents
                    status: pending
                    message: |
                      Request accepted to update access before effective date
                      to documents.
                    dateCreated: "2022-11-01T00:00:00+00:00"
                "Request to move effective date back to requested date":
                  value:
                    type: medical
                    id: present
                    accessLevel: full
                    date: "2021-11-01T00:00:00+00:00"
                    status: pending
                    message: Request received to move effective date to date.
                    dateCreated: "2022-11-01T00:00:00+00:00"
                "Request for full access to prescriptions service":
                  value:
                    type: service
                    id: prescriptions
                    accessLevel: full
                    status: pending
                    message: |
                      Request received for full access to prescriptions service.
                    dateCreated: "2022-11-01T00:00:00+00:00"
                "Request rejected for full access to appointments service":
                  value:
                    type: service
                    id: prescriptions
                    accessLevel: full
                    status: rejected
                    message: |
                      Request received for full access to prescriptions
                      service.
                    dateCreated: "2022-11-01T00:00:00+00:00"
        4XX:
          description: Invalid request
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "Invalid request error response":
                  $ref: "#/components/examples/InvalidRequestError"
                "Error response with only the required fields":
                  $ref: "#/components/examples/ErrorResponseWithOnlyTheRequiredFields"
        5XX:
          description: Server error
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "Server error response":
                  $ref: "#/components/examples/ServerError"
                "Error response with only the required fields":
                  $ref: "#/components/examples/ErrorResponseWithOnlyTheRequiredFields"

components:
  schemas:
    UserPermission:
      $ref: "components/schemas/UserPermission.yaml"
    ErrorResponse:
      $ref: "components/schemas/ErrorResponse.yaml"
    MedicalRecordPermission:
      $ref: "components/schemas/MedicalRecordPermission.yaml"
    ServicePermission:
      $ref: "components/schemas/ServicePermission.yaml"
    BaseRequest:
      $ref: "components/schemas/BaseRequest.yaml"
    # MedicalRecordRequest:
    #   $ref: "components/schemas/MedicalRecordRequest.yaml"
    # ServiceRequest:
    #   $ref: "components/schemas/ServiceRequest.yaml"
    MedicalRecordPermissionUpdate:
      $ref: "components/schemas/MedicalRecordPermissionUpdate.yaml"
    ServicePermissionUpdate:
      $ref: "components/schemas/ServicePermissionUpdate.yaml"
    PermissionUpdateResponse:
      $ref: "components/schemas/PermissionUpdateResponse.yaml"
    BasePermissionUpdateResponse:
      $ref: "components/schemas/BasePermissionUpdateResponse.yaml"
    # MedicalRecordPermissionUpdateResponse:
    #   $ref: "components/schemas/MedicalRecordPermissionUpdateResponse.yaml"
    # ServicePermissionUpdateResponse:
    #   $ref: "components/schemas/ServicePermissionUpdateResponse.yaml"
    MedicalRecordAccessLevelEnum:
      $ref: "components/schemas/MedicalRecordAccessLevelEnum.yaml"
    # MaxMedicalRecordAccessLevelEnum:
    #   $ref: "components/schemas/MaxMedicalRecordAccessLevelEnum.yaml"
    MedicalRecordPermissionTypeIdEnum:
      $ref: "components/schemas/MedicalRecordPermissionTypeIdEnum.yaml"
    ServiceAccessLevelEnum:
      $ref: "components/schemas/ServiceAccessLevelEnum.yaml"
    MaxServiceAccessLevelEnum:
      $ref: "components/schemas/MaxServiceAccessLevelEnum.yaml"
    ServiceIdEnum:
      $ref: "components/schemas/ServiceIdEnum.yaml"

  examples:
    FullPermissions:
      $ref: "components/examples/FullPermissions.yaml"
    PendingRequestForDocumentsAccess:
      $ref: "components/examples/PendingRequestForDocumentsAccess.yaml"
    PendingRequestForFullAccessAppointments:
      $ref: "components/examples/PendingRequestForFullAccessAppointments.yaml"
    MultiplePendingRequests:
      $ref: "components/examples/MultiplePendingRequests.yaml"
    InvalidRequestError:
      $ref: "components/examples/InvalidRequestError.yaml"
    ServerError:
      $ref: "components/examples/ServerError.yaml"
    ErrorResponseWithOnlyTheRequiredFields:
      $ref: "components/examples/ErrorResponseWithOnlyTheRequiredFields.yaml"

  requestBodies:
    UpdatePermission:
      $ref: "components/requestBodies/UpdatePermission.yaml"

  securitySchemes:
    BearerAuthorization:
      type: http
      description: |
        An
        [OAuth 2.0 bearer token](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis)
        from NHS login.
      scheme: bearer
      bearerFormat: ^Bearer\ [[:ascii:]]+$

security:
  - BearerAuthorization: []
