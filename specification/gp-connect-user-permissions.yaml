# This is an OpenAPI Specification (https://swagger.io/specification/)
# for gp-connect-user-permissions owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  version: Computed and injected at build time by `scripts/set_version.py`
  title: GP Connect - Patient Permissions
  contact:
    name: GP Connect - Patient Permissions API Support
    url: https://digital.nhs.uk/developer/help-and-support
    email: api.management@nhs.net
  description: |
    ## Overview

    Use this API to manage a patient's permissions to access the medical
    record and services they can access at their GP practice.

    You can:

    - get a patient's permissions
    - request to update a patient's permissions to a higher level

    You cannot:

    - request to update a patient's permissions to a lower level

    To use this API, the end user must be a patient who is:

    - registered with the GP practice
    - registered with NHS login to P9 identity verification level

    This API allows you to manage the permissions for:

    - appointments
    - prescriptions
    - medical record

    ### Access modes

    This API has a single access mode:

    | Access mode                                                                                                                | Functions | Availability |
    | -----------                                                                                                                | --------- | ------------ |
    | [Patient access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#patient-access-mode) | Get own permissions. Update own permissions. | TBC |

    For further details about the access modes for this API, see
    [Security and authorisation](#api-description__security-and-authorisation) below.

    ## Who can use this API

    This API:

    - is only for use by patient-facing applications
    - is only for non-clinical use
    - can only be used where there is a legal basis to do so

    Make sure you have a valid use case before you go too far with your development. To do this, contact us.

    You must do this before you can go live (see `Onboarding` below).

    ## Related APIs

    The GP Connect suite of patient facing service (PFS) APIs include the
    following related APIs:

    - [GP Connect appointment management FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-appointment-management-fhir) - manage GP practice appointments between different systems.
    - GP Connect access record API - retrieve a patient's medical record from the GP practice systems.
    - GP Connect prescriptions management API - manage a patient's prescriptions as held by the GP practice systems.

    ## API status and roadmap

    This API is [in development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:

    - it is available for testing in the integration environment
    - it is not available for production use
    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice

    To see our roadmap or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/suggestions/341390/gp-connect-user-permissions).

    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).

    ## Service level

    This API is a silver service, meaning it is operational 24 x 7 x 365 but
    only supported during business hours (8am to 6pm), Monday to Friday
    excluding bank holidays.

    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology

    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/our-api-technologies#basic-rest)

    ## Network access

    This API is available on the internet.

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation

    This API is
    [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis),
    meaning an end user must be present and authenticated to use it.

    The end user must be:

    - a patient
    - authenticated with NHS login to P9 identity verification level

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to
    authorise the calling system. It supports the following security pattern
    using NHS login:

    - [User-restricted RESTful APIs - NHS login separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-separate-authentication-and-authorisation)

    ## Environments and testing

    | Purpose          | URL                                                         |
    | -------          | ---                                                         |
    | Sandbox          | `https://sandbox.api.service.nhs.uk/gp-connect/permissions` |
    | Integration test | Not yet available                                           |
    | Production       | Not yet available                                           |

    ### Sandbox testing

    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    - is for early developer testing
    - only covers a limited set of scenarios
    - is stateless, so it does not store data
    - is open access, so does not allow you to test authorisation

    For more details on sandbox testing, or to try out the sandbox using our
    "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing (not yet available)

    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    - is for formal integration testing
    - is stateful, so it does persist data
    - includes authorisation

    For more details see
     [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ## Onboarding

    We are hoping to make the assurance process as lightweight and as
    self-service as possible.

    ## Errors

    We use standard HTTP status codes to show whether an API request succeeded
    or not. They are usually in the range:

    - 200 to 299 if it succeeded, including code 202 if it was accepted by an
      API that needs to wait for further action

    - 400 to 499 if it failed because of a client error by your application

    - 500 to 599 if it failed because of an error on our server

    Errors specific to each API are shown in the Endpoints section, under
    Response. See our
    [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes)
    for more on errors.

servers:
  - url: https://sandbox.api.service.nhs.uk/gp-connect/permissions
    description: Sandbox environment

tags:
  - name: Patient Permissions
    description: Patient permissions operations

paths:
  /Patient/{id}:
    parameters:
      - $ref: "#/components/parameters/Id"
      - $ref: "#/components/parameters/BearerAuthorization"
      - $ref: "#/components/parameters/CorrelationID"
      - $ref: "#/components/parameters/RequestID"
    get:
      operationId: getPatientPermissions
      tags:
        - Patient Permissions
      summary: GET a patient's permissions
      description: |
        Get a patient's permissions to access the medical record and services
        they can access at their GP practice.
        Returns an object which includes information about the
        permissions they have to the medical record and services.
      responses:
        200:
          description: Successful response
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/X-Correlation-ID"
            X-Request-ID:
              $ref: "#/components/headers/X-Request-ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientPermission"
              examples:
                ResponseFullPermissions:
                  $ref: "#/components/examples/ResponseFullPermissions"
                ResponsePendingRequestForDocumentsAccess:
                  $ref: "#/components/examples/ResponsePendingRequestForDocumentsAccess"
                ResponsePendingRequestForFullAcecssAppointments:
                  $ref: "#/components/examples/ResponsePendingRequestForFullAccessAppointments"
                ResponseMultiplePendingRequests:
                  $ref: "#/components/examples/ResponseMultiplePendingRequests"
    post:
      operationId: updatePatientPermissions
      tags:
        - Patient Permissions
      summary: Request a change to a permission
      description: |
        Request a change to the permission a patient has for their medical
        record or services provided by the GP practice.
        Once a request has been submitted it will be actioned, however, due to
        the nature of the request when this will happen is unknown at the time
        of request submission.
        When the request has been actioned the result will be apparent in the
        response to getting the permissions.
        The message returned from submitting the request _should_ contain
        information pertinent to when the request may be actioned. This could
        be shown to the patient to help set expectations.
      requestBody:
        $ref: "#/components/requestBodies/UpdatePermission"
      responses:
        200:
          description: Successful response
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/X-Correlation-ID"
            X-Request-ID:
              $ref: "#/components/headers/X-Request-ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionUpdateResponse"
              examples:
                ResponseRequestForDocumentsAccess:
                  $ref: "#/components/examples/ResponseRequestForDocumentsAccess"
                ResponseRequestToMoveDate:
                  $ref: "#/components/examples/ResponseRequestToMoveDate"
                ResponseRequestPending:
                  $ref: "#/components/examples/ResponseRequestPending"
                ResponseRequestRejected:
                  $ref: "#/components/examples/ResponseRequestRejected"

components:
  headers:
    X-Correlation-ID:
      schema:
        $ref: "#/components/schemas/CorrelationID"
    X-Request-ID:
      schema:
        $ref: "#/components/schemas/RequestID"

  parameters:
    Id:
      in: path
      name: id
      description: |
        The patient's NHS number. The primary identifier of a patient, unique
        within NHS England and Wales. Always 10 digits and must be a
        [valid NHS number](https://www.datadictionary.nhs.uk/attributes/nhs_number.html).
      required: true
      schema:
        type: string
        example: "9000000009"
    BearerAuthorization:
      in: header
      name: Authorization
      description: |
        An
        [OAuth 2.0 bearer token](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis)
        from NHS login.
      required: true
      schema:
        type: string
        format: '^Bearer\ [[:ascii:]]+$'
        example: "Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM"
    CorrelationID:
      in: header
      name: X-Correlation-ID
      description: |
        An optional ID which you can use to track transactions across multiple
        systems. It can take any value, but we recommend avoiding `.`
        characters.

        Mirrored back in a response header.
      schema:
        $ref: "#/components/schemas/CorrelationID"
    RequestID:
      in: header
      name: X-Request-ID
      description: |
        A globally unique identifier (GUID) for the request, which we use to
        de-duplicate repeated requests and to trace the request if you contact
        our helpdesk.

        Must be a universally unique identifier (UUID) (ideally version 4).
        Mirrored back in a response header.
        If you re-send a failed request, use the same value in this header.
      schema:
        $ref: "#/components/schemas/RequestID"

  schemas:
    CorrelationID:
      type: string
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA
      description: |
        The X-Correlation-ID from the request header, if supplied, mirrored
        back.
    RequestID:
      type: string
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      example: 60E0B220-8136-4CA5-AE46-1D97EF59D068
      description: |
        The X-Request-ID from the request header, if supplied, mirrored back.
    PatientPermission:
      type: object
      description: |
        Contains the access levels the patient has to the medical record,
        appointments and prescriptions.

        Medical record access levels are split into `current.accessLevel` and
        `historical.accessLevel` with an `effectiveDate` for when the current
        access level started.

        Medical record, appointments and prescriptions also include the maximum
        level of access the patient could have with `accessLevelMax`.

        An optional array of objects may be included to contain any pending
        requests.
      required:
        - medicalRecord
        - appointments
        - prescriptions
      properties:
        medicalRecord:
          $ref: "#/components/schemas/MedicalRecordPermission"
        appointments:
          $ref: "#/components/schemas/AppointmentsPermission"
        prescriptions:
          $ref: "#/components/schemas/PrescriptionsPermission"
        requests:
          type: array
          description: |
            List of requests that have been made to update permissions but have
            yet to be processed.
          items:
            description: |
              A request could be for the medical record, appointments service
              or prescriptions service.
            anyOf:
              - $ref: "#/components/schemas/MedicalRecordPermissionRequest"
              - $ref: "#/components/schemas/AppointmentsPermissionRequest"
              - $ref: "#/components/schemas/PrescriptionsPermissionRequest"

    MedicalRecordPermission:
      type: object
      description: |
        Contains the access level the patient has to the medical record. This
        is split into `current.accessLevel` and `historical.accessLevel` with
        an `effectiveDate`, representing the date when the current level of
        access started.
        Alongside `accessLevel` is `accessLevelMax` which represents the
        highest level of permission that could be requested.
      required:
        - current
        - effectiveDate
      properties:
        effectiveDate:
          type: string
          description: The date when the `current` permissions started.
          format: date
          example: "2022-11-01"
        current:
          $ref: "#/components/schemas/MedicalRecordCurrentPermissionItem"
        historical:
          $ref: "#/components/schemas/MedicalRecordHistoricalPermissionItem"

    MedicalRecordCurrentPermissionItem:
      type: object
      description: |
        An object representing the level of permission a patient has to the
        current medical record along with the maximum level of access that
        could be requested.
        The current medical record is anything at or after the `effectiveDate`.
      required:
        - accessLevel
        - accessLevelMax
      properties:
        accessLevel:
          $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
        accessLevelMax:
          $ref: "#/components/schemas/MedicalRecordAccessLevelMaxEnum"
    MedicalRecordHistoricalPermissionItem:
      type: object
      description: |
        An object representing the level of permission a patient has to the
        historical medical record along with the maximum level of access that
        could be requested.
        The historical medical record is anything before the `effectiveDate`.
      required:
        - accessLevel
        - accessLevelMax
      properties:
        accessLevel:
          $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
        accessLevelMax:
          $ref: "#/components/schemas/MedicalRecordAccessLevelMaxEnum"

    AppointmentsPermission:
      type: object
      description: |
        An object representing the level of permission a patient has to the
        appointments service along with the maximum level of access that
        could be requested.
      required:
        - accessLevel
        - accessLevelMax
      properties:
        accessLevel:
          $ref: "#/components/schemas/AppointmentsAccessLevelEnum"
        accessLevelMax:
          $ref: "#/components/schemas/AppointmentsAccessLevelMaxEnum"
    PrescriptionsPermission:
      type: object
      description: |
        An object representing the level of permission a patient has to the
        prescriptions service along with the maximum level of access that
        could be requested.
      required:
        - accessLevel
        - accessLevelMax
      properties:
        accessLevel:
          $ref: "#/components/schemas/PrescriptionsAccessLevelEnum"
        accessLevelMax:
          $ref: "#/components/schemas/PrescriptionsAccessLevelMaxEnum"

    BaseRequest:
      type: object
      description: |
        An object containing information pertaining to requests to change
        permissions.
      required:
        - status
        - createdDateTime
        - message
      properties:
        createdDateTime:
          type: string
          description: The date-time when the request for change was created.
          format: date-time
          example: "2022-11-01T23:59:59+00:00"
        message:
          type: string
          description: A message pertaining to the request and its status.
          example: Request requires review by a healthcare worker.
        status:
          type: string
          description: The status of the request.
          enum:
            - pending
            - rejected
          example: pending
    MedicalRecordPermissionRequest:
      type: object
      description: |
        An object containing information pertaining to any pending 
        requests for changes to the medical record permissions.
      allOf:
        - type: object
          required:
            - accessLevel
            - id
            - type
          properties:
            permissionType:
              $ref: "#/components/schemas/MedicalRecordPermissionTypeEnum"
            accessLevel:
              $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
            subType:
              $ref: "#/components/schemas/MedicalRecordPermissionSubTypeEnum"
        - $ref: "#/components/schemas/BaseRequest"
    AppointmentsPermissionRequest:
      type: object
      description: |
        An object containing information pertaining to any pending
        requests for changes to the appointments service permissions.
      allOf:
        - type: object
          required:
            - accessLevel
            - id
          properties:
            permissionType:
              $ref: "#/components/schemas/AppointmentsPermissionTypeEnum"
            accessLevel:
              $ref: "#/components/schemas/AppointmentsAccessLevelEnum"
        - $ref: "#/components/schemas/BaseRequest"
    PrescriptionsPermissionRequest:
      type: object
      description: |
        An object containing information pertaining to any pending
        requests for changes to the prescriptions service permissions.
      allOf:
        - type: object
          required:
            - accessLevel
            - id
          properties:
            permissionType:
              $ref: "#/components/schemas/PrescriptionsPermissionTypeEnum"
            accessLevel:
              $ref: "#/components/schemas/PrescriptionsAccessLevelEnum"
        - $ref: "#/components/schemas/BaseRequest"

    AppointmentsPermissionUpdate:
      type: object
      description: |
        Object containing the `accessLevel` to update the appointments service
        to.
      required:
        - id
        - accessLevel
      properties:
        permissionType:
          $ref: "#/components/schemas/AppointmentsPermissionTypeEnum"
        accessLevel:
          $ref: "#/components/schemas/AppointmentsAccessLevelEnum"
    PrescriptionsPermissionUpdate:
      type: object
      description: |
        Object containing the `accessLevel` to update the prescriptions service
        to.
      required:
        - id
        - accessLevel
      properties:
        permissionType:
          $ref: "#/components/schemas/PrescriptionsPermissionTypeEnum"
        accessLevel:
          $ref: "#/components/schemas/PrescriptionsAccessLevelEnum"
    MedicalRecordPermissionUpdate:
      type: object
      description: |
        Object containing information about the request to update the
        permission to the medical record.
      required:
        - id
      properties:
        permissionType:
          $ref: "#/components/schemas/MedicalRecordPermissionTypeEnum"
        accessLevel:
          $ref: "#/components/schemas/MedicalRecordAccessLevelEnum"
        type:
          $ref: "#/components/schemas/MedicalRecordPermissionSubTypeEnum"
        effectiveDate:
          type: string
          description: |
            The date to move the `effectiveDate` of the current permissions to.
          format: date
          example: "2022-11-01"

    PermissionUpdateResponse:
      type: object
      description: |
        A response could be for the medical record, appointments service
        or prescriptions service depending on the request made. The response
        will always correspond to the request.
      oneOf:
        - $ref: "#/components/schemas/MedicalRecordPermissionUpdateResponse"
        - $ref: "#/components/schemas/AppointmentsPermissionUpdateResponse"
        - $ref: "#/components/schemas/PrescriptionsPermissionUpdateResponse"
      discriminator:
        propertyName: id
        mapping:
          medicalRecord: "#/components/schemas/MedicalRecordPermissionUpdateResponse"
          appointments: "#/components/schemas/AppointmentsPermissionUpdateResponse"
          prescriptions: "#/components/schemas/PrescriptionsPermissionUpdateResponse"
    MedicalRecordPermissionUpdateResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - $ref: "#/components/schemas/MedicalRecordPermissionUpdate"
    AppointmentsPermissionUpdateResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - $ref: "#/components/schemas/AppointmentsPermissionUpdate"
    PrescriptionsPermissionUpdateResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - $ref: "#/components/schemas/PrescriptionsPermissionUpdate"

    AppointmentsPermissionTypeEnum:
      type: string
      description: Appointments permission type.
      enum:
        - appointments
    AppointmentsAccessLevelEnum:
      type: string
      description: |
        Indicates the level of access the patient has to the appointments
        service.

        | level | description                            |
        | ----- | -----------                            |
        | none  | no access                              |
        | view  | view only                              |
        | book  | can book appointments                  |
        | full  | can amend/cancel existing appointments |
      enum:
        - none
        - view
        - book
        - full
      example: book
    AppointmentsAccessLevelMaxEnum:
      type: string
      description: |
        Indicates the maximum level of access the patient could request to the
        appointments service.

        | level | description                            |
        | ----- | -----------                            |
        | none  | no access                              |
        | view  | view only                              |
        | book  | can book appointments                  |
        | full  | can amend/cancel existing appointments |
      enum:
        - none
        - view
        - book
        - full
      example: full
    PrescriptionsPermissionTypeEnum:
      type: string
      description: Prescriptions permission type.
      enum:
        - prescriptions
    PrescriptionsAccessLevelEnum:
      type: string
      description: |
        Indicates the level of access the patient has to the prescriptions
        service.

        | level | description                             |
        | ----- | -----------                             |
        | none  | no access                               |
        | view  | view only                               |
        | order | can order prescriptions                 |
        | full  | can amend/cancel existing prescriptions |
      enum:
        - none
        - view
        - order
        - full
      example: order
    PrescriptionsAccessLevelMaxEnum:
      type: string
      description: |
        Indicates the maximum level of access the patient could request to the
        prescriptions service.

        | level | description                             |
        | ----- | -----------                             |
        | none  | no access                               |
        | view  | view only                               |
        | order | can order prescriptions                 |
        | full  | can amend/cancel existing prescriptions |
      enum:
        - none
        - view
        - order
        - full
      example: full
    MedicalRecordPermissionTypeEnum:
      type: string
      description: Medical record permission type.
      enum:
        - medicalRecord
    MedicalRecordPermissionSubTypeEnum:
      type: string
      description: The type of the permission.
      enum:
        - current
        - historical
      example: current
    MedicalRecordAccessLevelEnum:
      type: string
      description: |
        Indicates the level of access the patient has to the medical record.

        | level     | description                  |
        | -----     | -----------                  |
        | none      | no access                    |
        | summary   | summary record access        |
        | detailed  | detailed coded record access |
        | documents | documents access             |
        | full      | full access                  |
      enum:
        - none
        - summary
        - detailed
        - documents
        - full
      example: detailed
    MedicalRecordAccessLevelMaxEnum:
      type: string
      description: |
        Indicates the maximum level of access the patient could request to the
        medical record.

        | level     | description                  |
        | -----     | -----------                  |
        | none      | no access                    |
        | summary   | summary record access        |
        | detailed  | detailed coded record access |
        | documents | documents access             |
        | full      | full access                  |
      enum:
        - none
        - summary
        - detailed
        - documents
        - full
      example: detailed

  examples:
    ResponseFullPermissions:
      summary: Full permissions to medical record and services
      value:
        medicalRecord:
          effectiveDate: "2022-11-01"
          current:
            accessLevel: full
            accessLevelMax: full
          historical:
            accessLevel: summary
            accessLevelMax: documents
        appointments:
          accessLevel: view
          accessLevelMax: full
        prescriptions:
          accessLevel: order
          accessLevelMax: full
    ResponsePendingRequestForDocumentsAccess:
      summary: Pending request to get documents access to historical record
      value:
        medicalRecord:
          effectiveDate: "2022-11-01"
          current:
            accessLevel: full
            accessLevelMax: full
          historical:
            accessLevel: summary
            accessLevelMax: documents
        appointments:
          accessLevel: book
          accessLevelMax: book
        prescriptions:
          accessLevel: view
          accessLevelMax: order
        requests:
          - status: pending
            createdDateTime: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: documents
            permissionType: medicalRecord
    ResponsePendingRequestForFullAccessAppointments:
      summary: Pending request for full access to appointments
      value:
        medicalRecord:
          effectiveDate: "2022-11-01"
          current:
            accessLevel: full
            accessLevelMax: full
          historical:
            accessLevel: summary
            accessLevelMax: detailed
        appointments:
          accessLevel: view
          accessLevelMax: book
        prescriptions:
          accessLevel: view
          accessLevelMax: order
        requests:
          - status: pending
            createdDateTime: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: full
            permissionType: appointments
    ResponseMultiplePendingRequests:
      summary: Multiple pending requests
      value:
        medicalRecord:
          effectiveDate: "2022-11-01"
          current:
            accessLevel: full
            accessLevelMax: full
          historical:
            accessLevel: summary
            accessLevelMax: detailed
        appointments:
          accessLevel: view
          accessLevelMax: book
        prescriptions:
          accessLevel: view
          accessLevelMax: order
        requests:
          - status: pending
            createdDateTime: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: book
            permissionType: appointments
          - status: pending
            createdDateTime: "2022-10-31T23:59:59+00:00"
            message: Requires review by a healthcare worker.
            accessLevel: detailed
            permissionType: medicalRecord
            subType: historical
    ResponseRequestForDocumentsAccess:
      summary: |
        Request for documents access for historical permissions that is pending
      value:
        permissionType: medicalRecord
        subType: historical
        accessLevel: documents
        status: pending
        message: >-
          Request accepted to update access historical effective
          date to documents.
        createdDateTime: "2022-11-01T00:00:00+00:00"
    ResponseRequestToMoveDate:
      summary: Request to move effectiveDate back to requested date
      value:
        permissionType: medicalRecord
        subType: current
        accessLevel: full
        effectiveDate: "2021-11-01"
        status: pending
        message: Request received to move effective date to date.
        createdDateTime: "2022-11-01T00:00:00+00:00"
    ResponseRequestPending:
      summary: Request for full access to prescriptions service
      value:
        permissionType: prescriptions
        accessLevel: full
        status: pending
        message: >-
          Request received for full access to prescriptions service.
        createdDateTime: "2022-11-01T00:00:00+00:00"
    ResponseRequestRejected:
      summary: Request rejected for full access to appointments service
      value:
        permissionType: prescriptions
        accessLevel: full
        status: rejected
        message: >-
          Request received for full access to prescriptions
          service.
        createdDateTime: "2022-11-01T00:00:00+00:00"
    RequestBodyDocumentAccess:
      summary: |
        Request documents access for medical record historical effective date
      value:
        permissionType: medicalRecord
        subType: historical
        accessLevel: documents
    RequestBodyDateChange:
      summary: Request effective date is set to date
      value:
        permissionType: medicalRecord
        effectiveDate: "2022-11-01"
    RequestBodyBookAppointments:
      summary: Request book access to appointments service
      value:
        permissionType: appointments
        accessLevel: book
    RequestBodyFullPrescriptions:
      summary: Request full access to prescriptions service
      value:
        permissionType: prescriptions
        accessLevel: full

  requestBodies:
    UpdatePermission:
      description: |
        Object containing information about the permission to update along with
        the `accessLevel` to update to.
      required: true
      content:
        application/json:
          schema:
            description: |
              A request could be for the medical record, appointments service
              or prescriptions service.
            oneOf:
              - $ref: "#/components/schemas/MedicalRecordPermissionUpdate"
              - $ref: "#/components/schemas/AppointmentsPermissionUpdate"
              - $ref: "#/components/schemas/PrescriptionsPermissionUpdate"
            discriminator:
              propertyName: id
              mapping:
                medicalRecord: "#/components/schemas/MedicalRecordPermissionUpdate"
                appointments: "#/components/schemas/AppointmentsPermissionUpdate"
                prescriptions: "#/components/schemas/PrescriptionsPermissionUpdate"
          examples:
            RequestBodyDocumentAccess:
              $ref: "#/components/examples/RequestBodyDocumentAccess"
            RequestBodyDateChange:
              $ref: "#/components/examples/RequestBodyDateChange"
            RequestBodyBookAppointments:
              $ref: "#/components/examples/RequestBodyBookAppointments"
            RequestBodyFullPrescriptions:
              $ref: "#/components/examples/RequestBodyFullPrescriptions"
