# This is an OpenAPI Specification (https://swagger.io/specification/)
# for gp-connect-user-permissions owned by NHS Digital (https://digital.nhs.uk/)
openapi: 3.0.0
info:
  version: Computed and injected at build time by `scripts/set_version.py`
  title: GP Connect - Patient Permissions
  contact:
    name: GP Connect - Patient Permissions API Support
    url: https://digital.nhs.uk/developer/help-and-support
    email: api.management@nhs.net
  description: |
    ## Overview

    Use this API to list and manage the permissions a patient has to their
    medical record and a selection of services provided at their GP practice.

    You can:

    - get a patient's permissions
    - request to update a patient's permissions to a higher level

    You cannot:

    - request to update a patient's permissions to a lower level

    To use this API, the end user must be a patient who is:

    - registered with the GP practice
    - registered with NHS login to P9 identity verification level

    This API allows you to manage the permissions for:

    - appointments
    - prescriptions
    - medical record

    ### Access modes

    This API has a single access mode:

    | Access mode                                                                                                                | Functions                                    | Availability |
    | -----------                                                                                                                | ---------                                    | ------------ |
    | [Patient access](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#patient-access-mode) | Get own permissions. Update own permissions. | TBC          |

    For further details about the access modes for this API, see
    [Security and authorisation](#api-description__security-and-authorisation) below.

    ## Who can use this API

    This API:

    - is only for use by patient-facing applications
    - is only for non-clinical use
    - can only be used where there is a legal basis to do so

    Make sure you have a valid use case before you go too far with your
    development. To do this, [contact us](https://digital.nhs.uk/developer/help-and-support).

    You must do this before you can go live (see
    [Onboarding](#api-description__onboarding) below).

    ## Related APIs

    The GP Connect suite of APIs include the following related APIs:

    - [GP Connect (1st Generation) Access Document - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-access-document-fhir) - retrieve unstructured documents from a patient's GP practice record.
    - [GP Connect (1st Generation) Access Record: HTML - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-access-record-html-fhir) - view a patient's GP practice record, with read-only access.
    - [GP Connect (1st Generation) Access Record: Structured - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-access-record-structured-fhir) - retrieve structured information from a patient's GP practice record.
    - [GP Connect (1st Generation) Appointment Management - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-appointment-management-fhir) - manage GP practice appointments between different systems.
    - [GP Connect (1st Generation) Send Document - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-send-document-fhir) - send a PDF consultation summary to a registered GP practice.
    - [GP Connect (2nd Generation) Access Record - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-2nd-generation-access-record-fhir) - access a patient's GP records with the GP Connect (2nd Generation) Access Record - FHIR API.
    - [GP Connect (2nd Generation) Appointment Management - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-2nd-generation-appointment-management-fhir) - manage a patient's GP appointments using the GP Connect (2nd Generation) Appointment Management - FHIR API.
    - [GP Connect (2nd Generation) Prescriptions - FHIR API](https://digital.nhs.uk/developer/api-catalogue/gp-connect-2nd-generation-prescriptions-fhir) - manage a patient's prescriptions using the GP Connect (2nd Generation) Prescriptions - FHIR API.

    ## API status and roadmap

    This API is [in development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:

    - it is available for testing in the integration environment
    - it is not available for production use
    - we might make breaking changes, but only if we cannot avoid it, and we will give advance notice

    To see our roadmap or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/suggestions/341390/gp-connect-user-permissions).

    If you have any other queries,
    [contact us](https://digital.nhs.uk/developer/help-and-support).

    ## Service level

    This API is a silver service, meaning it is operational 24 x 7 x 365 but
    only supported during business hours (8am to 6pm), Monday to Friday
    excluding bank holidays.

    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology

    This API is
    [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/our-api-technologies#basic-rest).

    ## Network access

    This API is available on the internet and, indirectly, on the
    [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation

    This API is
    [user-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#user-restricted-apis),
    meaning an end user must be present and authenticated to use it.

    The end user must be:

    - a patient
    - authenticated with NHS login to P9 identity verification level

    The API uses Open ID Connect to authenticate the end user and OAuth 2.0 to
    authorise the calling system. It supports the following security pattern
    using NHS login:

    - [User-restricted RESTful APIs - NHS login separate authentication and authorisation](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-login-separate-authentication-and-authorisation)

    ## Environments and testing

    | Purpose          | URL                                                         |
    | -------          | ---                                                         |
    | Sandbox          | `https://sandbox.api.service.nhs.uk/gp-connect/permissions` |
    | Integration test | Not yet available                                           |
    | Production       | Not yet available                                           |

    ### Sandbox testing

    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):

    - is for early developer testing
    - only covers a limited set of scenarios
    - is stateless, so it does not store data
    - is open access, so does not allow you to test authorisation

    For more details on sandbox testing, or to try out the sandbox using our
    "Try this API" feature, see the documentation for each endpoint.

    ### Integration testing (not yet available)

    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):

    - is for formal integration testing
    - is stateful, so it does persist data
    - includes authorisation

    For more details see
     [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).

    ## Onboarding

    We are hoping to make the assurance process as lightweight and as
    self-service as possible.

    ## Errors

    We use standard HTTP status codes to show whether an API request succeeded
    or not. They are usually in the range:

    - 200 to 299 if it succeeded, including code 202 if it was accepted by an
      API that needs to wait for further action

    - 400 to 499 if it failed because of a client error by your application

    - 500 to 599 if it failed because of an error on our server

    Errors specific to each API are shown in the Endpoints section, under
    Response. See our
    [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes)
    for more on errors.

servers:
  - url: https://sandbox.api.service.nhs.uk/gp-connect/permissions
    description: Sandbox environment

paths:
  /Patient/{id}:
    parameters:
      - $ref: "#/components/parameters/Id"
      - $ref: "#/components/parameters/BearerAuthorization"
      - $ref: "#/components/parameters/CorrelationID"
      - $ref: "#/components/parameters/RequestID"
    get:
      operationId: getPatientPermissions
      summary: Get a patient's permissions
      description: |
        ## Overview

        Get a patient's permissions. The permissions describe the access levels
        the patient has to their medical record and a selection of services
        provided at their GP practice.

        Returns information about the current and historical permissions to
        their medical record and the current permissions to appointment and
        prescription services.

        This endpoint has two main use cases:

        * to build UIs so only the functionality the patient has access to is
          displayed
        * present the permissions to the patient so they can request changes

        Each permission has two properties, an `accessLevel` and an
        `accessLevelMax`. The former describes the current level of permission
        the patient has and the latter describes the maximum level of
        permission they may make a request for. For example, a patient might
        have `summary` access to their historical medical record but they could
        make a request for `detailed`, if this is what `accessLevelMax`
        returned.

        The `requests` property contains information about any `pending`
        requests. This information can be used to communicate messages to the
        patient about the state of their requests. Any requests that have been
        previsouly made and processed are not included and the those changes
        will be in evidence in the permission data.
      responses:
        200:
          description: Successful response
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/X-Correlation-ID"
            X-Request-ID:
              $ref: "#/components/headers/X-Request-ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientPermission"
              examples:
                ResponseFullPermissions:
                  $ref: "#/components/examples/ResponseFullPermissions"
                ResponsePendingRequestForDocumentsAccess:
                  $ref: "#/components/examples/ResponsePendingRequestForDocumentsAccess"
                ResponsePendingRequestForFullAcecssAppointments:
                  $ref: "#/components/examples/ResponsePendingRequestForFullAccessAppointments"
                ResponseMultiplePendingRequests:
                  $ref: "#/components/examples/ResponseMultiplePendingRequests"
        4XX:
          description: |
            An error occurred as follows:

            | HTTP status | Error code             | Description                                                                                                                               |
            | ----------- | ----------             | -----------                                                                                                                               |
            | 400         | INVALID_RESOURCE_ID    | Invalid NHS number.                                                                                                                       |
            | 400         | UNSUPPORTED_SERVICE    | Missing NHS number.                                                                                                                       |
            | 400         | MISSING_VALUE          | Missing header parameter. For details, see the `diagnostics` field.                                                                       |
            | 400         | INVALID_VALUE          | Invalid header parameter. For details, see the `diagnostics` field.                                                                       |
            | 401         | ACCESS_DENIED          | Access token missing, invalid or expired, or calling application not configured for this operation.                                       |
            | 403         | ACCESS_DENIED          | Patient cannot perform this action.                                                                                                       |
            | 404         | RESOURCE_NOT_FOUND     | Patient does not exist for given NHS number.                                                                                              |
            | 404         | INVALIDATED_RESOURCE   | Patient did exist for given NHS number, but has been invalidated and not superseded by another NHS number.                                |
            | 408         | UNABLE_TO_CALL_SERVICE | The downstream domain processing has not completed within the configured timeout period.                                                  |
            | 429         | TOO_MANY_REQUESTS      | You have exceeded your application's [rate limit](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#rate-limits). |
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InvalidRequestError:
                  $ref: "#/components/examples/InvalidRequestError"
                MinimalErrorResponse:
                  $ref: "#/components/examples/MinimalErrorResponse"
    post:
      operationId: updatePatientPermissions
      summary: Request a change to a permission
      description: |
        ## Overview

        Request a change to the permission a patient has for their medical
        record or services provided by the GP practice.
        When a request is submitted the response will include the status of the
        request. The status will be either `pending` or `rejected`. Most
        requests will return `pending` with `rejected` only used for reqeusts
        that should not have been sent in the first instance.

        The GP system will add each request to a workflow so it can be
        processed at a future time. When exactly this will happen is
        unknown at the time of the request.

        There is no notification mechanism to know when the request has been
        processed. In order to find out information about requests,
        [Get a patient's permissions](#api-PatientPermissions-getPatientPermissions).
        Pending requests will be listed in `requests` and completed requests
        will be in evidence in the permission data.

        Duplicate requests will be deduplicated by the GP system.
      requestBody:
        $ref: "#/components/requestBodies/UpdatePermission"
      responses:
        200:
          description: Successful response
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/X-Correlation-ID"
            X-Request-ID:
              $ref: "#/components/headers/X-Request-ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionUpdateResponse"
              examples:
                ResponseRequestForDocumentsAccess:
                  $ref: "#/components/examples/ResponseRequestForDocumentsAccess"
                ResponseRequestPending:
                  $ref: "#/components/examples/ResponseRequestPending"
                ResponseRequestRejected:
                  $ref: "#/components/examples/ResponseRequestRejected"
                ResponseRequestToMoveDate:
                  $ref: "#/components/examples/ResponseRequestToMoveDate"
        4XX:
          description: |
            An error occurred as follows:

            | HTTP status | Error code                      | Description                                                                                                                                                              |
            | ----------- | ----------                      | -----------                                                                                                                                                              |
            | 400         | INVALID_RESOURCE_ID             | Invalid NHS number.                                                                                                                                                      |
            | 400         | UNSUPPORTED_SERVICE             | Missing NHS number.                                                                                                                                                      |
            | 400         | MISSING_VALUE                   | Missing header parameter. For details, see the `diagnostics` field.                                                                                                      |
            | 400         | INVALID_VALUE                   | Invalid header parameter. For details, see the `diagnostics` field.                                                                                                      |
            | 400         | INVALID_UPDATE                  | Malformed request.                                                                                                                                                       |
            | 400         | VALIDATION_ERROR                | This is the "default" error thrown when no others are applicable.                                                                                                        |
            | 400         | UNSUPPORTED_CHARACTERS_IN_FIELD | Invalid value in body of patch request. For details, see the `diagnostics` field.                                                                                        |
            | 400         | ADDITIONAL_PROPERTIES           | The user sent additional properties within the dictionary.                                                                                                               |
            | 400         | UNSUPPORTED_VALUE               | There was an unsupported value in the request. For example sending a request and attempting to set a permission for an unknown permission type such as `communications`. |
            | 401         | ACCESS_DENIED                   | Access token missing, invalid or expired, or calling application not configured for this operation.                                                                      |
            | 403         | FORBIDDEN_UPDATE                | The user is not permitted to make certain requests. For example, no user can request access beyond the level of access denoted by `accessLevelMax`.                      |
            | 403         | ACCESS_DENIED                   | Patient cannot perform this action.                                                                                                                                      |
            | 404         | RESOURCE_NOT_FOUND              | Patient does not exist for given NHS number.                                                                                                                             |
            | 404         | INVALIDATED_RESOURCE            | Patient did exist for given NHS number, but has been invalidated and not superseded by another NHS number.                                                               |
            | 408         | UNABLE_TO_CALL_SERVICE          | The downstream domain processing has not completed within the configured timeout period.                                                                                 |
            | 429         | TOO_MANY_REQUESTS               | You have exceeded your application's [rate limit](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#rate-limits).                                |
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InvalidRequestError:
                  $ref: "#/components/examples/InvalidRequestError"
                MinimalErrorResponse:
                  $ref: "#/components/examples/MinimalErrorResponse"

components:
  headers:
    X-Correlation-ID:
      schema:
        $ref: "#/components/schemas/CorrelationID"
    X-Request-ID:
      schema:
        $ref: "#/components/schemas/RequestID"

  parameters:
    BearerAuthorization:
      $ref: "components/parameters/BearerAuthorization.yaml"
    CorrelationID:
      $ref: "components/parameters/CorrelationID.yaml"
    Id:
      $ref: "components/parameters/Id.yaml"
    RequestID:
      $ref: "components/parameters/RequestID.yaml"

  schemas:
    AppointmentsAccessLevelEnum:
      $ref: "components/schemas/AppointmentsAccessLevelEnum.yaml"
    AppointmentsAccessLevelMaxEnum:
      $ref: "components/schemas/AppointmentsAccessLevelMaxEnum.yaml"
    AppointmentsPermission:
      $ref: "components/schemas/AppointmentsPermission.yaml"
    AppointmentsPermissionTypeEnum:
      $ref: "components/schemas/AppointmentsPermissionTypeEnum.yaml"
    AppointmentsPermissionRequest:
      $ref: "components/schemas/AppointmentsPermissionRequest.yaml"
    AppointmentsPermissionUpdate:
      $ref: "components/schemas/AppointmentsPermissionUpdate.yaml"
    AppointmentsPermissionUpdateResponse:
      $ref: "components/schemas/AppointmentsPermissionUpdateResponse.yaml"
    BaseRequest:
      $ref: "components/schemas/BaseRequest.yaml"
    CorrelationID:
      $ref: "components/schemas/CorrelationID.yaml"
    ErrorResponse:
      $ref: "components/schemas/ErrorResponse.yaml"
    MedicalRecordAccessLevelEnum:
      $ref: "components/schemas/MedicalRecordAccessLevelEnum.yaml"
    MedicalRecordAccessLevelMaxEnum:
      $ref: "components/schemas/MedicalRecordAccessLevelMaxEnum.yaml"
    MedicalRecordCurrentPermissionItem:
      $ref: "components/schemas/MedicalRecordCurrentPermissionItem.yaml"
    MedicalRecordHistoricalPermissionItem:
      $ref: "components/schemas/MedicalRecordHistoricalPermissionItem.yaml"
    MedicalRecordPermission:
      $ref: "components/schemas/MedicalRecordPermission.yaml"
    MedicalRecordPermissionRequest:
      $ref: "components/schemas/MedicalRecordPermissionRequest.yaml"
    MedicalRecordPermissionSubTypeEnum:
      $ref: "components/schemas/MedicalRecordPermissionSubTypeEnum.yaml"
    MedicalRecordPermissionTypeEnum:
      $ref: "components/schemas/MedicalRecordPermissionTypeEnum.yaml"
    MedicalRecordPermissionUpdate:
      $ref: "components/schemas/MedicalRecordPermissionUpdate.yaml"
    MedicalRecordPermissionUpdateResponse:
      $ref: "components/schemas/MedicalRecordPermissionUpdateResponse.yaml"
    PatientPermission:
      $ref: "components/schemas/PatientPermission.yaml"
    PermissionUpdateResponse:
      $ref: "components/schemas/PermissionUpdateResponse.yaml"
    PrescriptionsAccessLevelEnum:
      $ref: "components/schemas/PrescriptionsAccessLevelEnum.yaml"
    PrescriptionsAccessLevelMaxEnum:
      $ref: "components/schemas/PrescriptionsAccessLevelMaxEnum.yaml"
    PrescriptionsPermission:
      $ref: "components/schemas/PrescriptionsPermission.yaml"
    PrescriptionsPermissionRequest:
      $ref: "components/schemas/PrescriptionsPermissionRequest.yaml"
    PrescriptionsPermissionUpdate:
      $ref: "components/schemas/PrescriptionsPermissionUpdate.yaml"
    PrescriptionsPermissionUpdateResponse:
      $ref: "components/schemas/PrescriptionsPermissionUpdateResponse.yaml"
    PrescriptionsPermissionTypeEnum:
      $ref: "components/schemas/PrescriptionsPermissionTypeEnum.yaml"
    RequestID:
      $ref: "components/schemas/RequestID.yaml"

  examples:
    InvalidRequestError:
      $ref: "components/examples/InvalidRequestError.yaml"
    MinimalErrorResponse:
      $ref: "components/examples/MinimalErrorResponse.yaml"
    ResponseFullPermissions:
      $ref: "components/examples/ResponseFullPermissions.yaml"
    ResponseMultiplePendingRequests:
      $ref: "components/examples/ResponseMultiplePendingRequests.yaml"
    ResponsePendingRequestForDocumentsAccess:
      $ref: "components/examples/ResponsePendingRequestForDocumentsAccess.yaml"
    ResponsePendingRequestForFullAccessAppointments:
      $ref: "components/examples/ResponsePendingRequestForFullAccessAppointments.yaml"
    ResponseRequestForDocumentsAccess:
      $ref: "components/examples/ResponseRequestForDocumentsAccess.yaml"
    ResponseRequestPending:
      $ref: "components/examples/ResponseRequestPending.yaml"
    ResponseRequestRejected:
      $ref: "components/examples/ResponseRequestRejected.yaml"
    ResponseRequestToMoveDate:
      $ref: "components/examples/ResponseRequestToMoveDate.yaml"
    RequestBodyBookAppointments:
      $ref: "components/examples/RequestBodyBookAppointments.yaml"
    RequestBodyDateChange:
      $ref: "components/examples/RequestBodyDateChange.yaml"
    RequestBodyDocumentAccess:
      $ref: "components/examples/RequestBodyDocumentAccess.yaml"
    RequestBodyFullPrescriptions:
      $ref: "components/examples/RequestBodyFullPrescriptions.yaml"

  requestBodies:
    UpdatePermission:
      $ref: "components/requestBodies/UpdatePermission.yaml"
